{"version":3,"sources":["components/SortingAlgorithms/BubbleSort.jsx","components/SortingAlgorithms/MergeSort.jsx","components/SortingAlgorithms/QuickSort.jsx","components/SortingAlgorithms/HeapSort.jsx","components/Array.jsx","components/App.js","index.js"],"names":["BubbleSort","a","animations","i","length","j","push","temp","MergeSort","arr","N","mergeSort","l","r","mid","Math","floor","m","n1","n2","L","R","k","merge","QuickSort","quickSort","low","high","pi","pivot","partition","HeapSort","heapify","n","largest","heapSort","Array","useState","array","setArray","resetArray","random","useEffect","className","map","num","index","style","height","onClick","arrayBars","document","getElementsByClassName","backgroundColor","changeCSS","code","bar1","bar2","newHeight1","newHeight2","setTimeout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88418b33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction BubbleSort(a) {\r\n    let animations= [];\r\n    for(var i=a.length-1;i>=0;i--) {\r\n        for(var j=0;j<i;j++) {\r\n            animations.push([0,j,j+1,0,0]);\r\n            if(a[j]>a[j+1]) {\r\n                animations.push([1,j,j+1,a[j],a[j+1]]);\r\n                var temp=a[j];\r\n                a[j]=a[j+1];\r\n                a[j+1]=temp;\r\n            }\r\n            animations.push([2,j,j+1,0,0]);\r\n        }\r\n        animations.push([3,i,0,0,0]);\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport default BubbleSort;","import React from \"react\";\r\n\r\n\r\n\r\n\r\nfunction MergeSort(arr) {\r\n\r\n    var N = arr.length;\r\n    \r\n\r\n    let animations=[];\r\n\r\n    mergeSort(arr,0,arr.length-1);\r\n\r\n    function merge(arr,l,m,r) {\r\n\r\n    \r\n        var n1 = m - l + 1;\r\n        var n2 = r - m;\r\n     \r\n        // Create temp arrays\r\n        var L=[],R=[];\r\n     \r\n        // Copy data to temp arrays L[] and R[]\r\n        for (var i = 0; i < n1; i++)\r\n            L.push(arr[l + i]);\r\n        for (var j = 0; j < n2; j++)\r\n            R.push(arr[m + 1 + j]);\r\n        \r\n        \r\n        // Merge the temp arrays back into arr[l..r]\r\n     \r\n        // Initial index of first subarray\r\n        i = 0;\r\n     \r\n        // Initial index of second subarray\r\n        j = 0;\r\n     \r\n        // Initial index of merged subarray\r\n        var k = l;\r\n     \r\n        while (i < n1 && j < n2) {\r\n            animations.push([0,k,0,0,0]);\r\n            if (L[i] <= R[j]) {\r\n                arr[k] = L[i];\r\n                animations.push([1,k,0,0,L[i]]);\r\n                animations.push([(l===0 && r===N-1)?3:2,k,0,0,0]);\r\n                i++;\r\n            }\r\n            else {\r\n                animations.push([1,k,0,0,R[j]]);\r\n                animations.push([(l===0 && r===N-1)?3:2,k,0,0,0]);\r\n                arr[k] = R[j];\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n     \r\n        // Copy the remaining elements of\r\n        // L[], if there are any\r\n        while (i < n1) {\r\n            animations.push([0,k,0,0,0]);\r\n            animations.push([1,k,0,0,L[i]]);\r\n            animations.push([(l===0 && r===N-1)?3:2,k,0,0,L[i]]);\r\n            arr[k] = L[i];\r\n            i++;\r\n            k++;\r\n        }\r\n     \r\n        // Copy the remaining elements of\r\n        // R[], if there are any\r\n        while (j < n2) {\r\n            animations.push([0,k,0,0,0]);\r\n            animations.push([1,k,0,0,R[j]]);\r\n            animations.push([(l===0 && r===N-1)?3:2,k,0,0,0]);\r\n            arr[k] = R[j];\r\n            j++;\r\n            k++;\r\n        }\r\n\r\n    }\r\n    \r\n    function mergeSort(arr,l,r) {\r\n        if(l<r) {\r\n        var mid=Math.floor((l+r)/2);\r\n        mergeSort(arr,l,mid);\r\n        mergeSort(arr,mid+1,r);\r\n        merge(arr,l,mid,r);\r\n        }\r\n    }\r\n\r\n\r\n    return animations;\r\n}\r\n\r\n\r\n\r\nexport default MergeSort;","import React from \"react\";\r\n\r\n\r\n\r\nfunction QuickSort(arr) {\r\n\r\n    var animations=[];\r\n    quickSort(arr,0,arr.length-1);\r\n\r\n    function partition (arr,  low, high) {\r\n        var pivot = arr[high]; // pivot\r\n        animations.push([3,high,0,0,0]);\r\n        var i = (low - 1); // Index of smaller element and indicates the right position of pivot found so far\r\n \r\n        for (var j = low; j <= high - 1; j++) {\r\n            // If current element is smaller than the pivot\r\n            animations.push([0,i+1,j,0,0]);\r\n            if (arr[j] < pivot) {\r\n                i++; // increment index of smaller element\r\n                animations.push([1,i,j,arr[i],arr[j]]);\r\n                animations.push([2,i,j,0,0]);\r\n                var temp=arr[i];\r\n                arr[i]=arr[j];\r\n                arr[j]=temp;\r\n            }\r\n            else {\r\n                animations.push([2,i+1,j,0,0]);\r\n            }\r\n        }\r\n        animations.push([0,i+1,high,0,0]);\r\n        animations.push([1,i+1,high,arr[i+1],arr[high]]);\r\n        animations.push([2,i+1,high,0,0]);\r\n        var temp=arr[i+1];\r\n        arr[i+1]=arr[high];\r\n        arr[high]=temp;\r\n        animations.push([4,i+1,0,0,0]);\r\n        return (i + 1);\r\n    }\r\n\r\n    function quickSort(arr, low, high) {\r\n        if (low <= high) {\r\n            /* pi is partitioning index, arr[p] is now\r\n            at right place */\r\n            var pi = partition(arr, low, high);\r\n\r\n            // Separately sort elements before\r\n            // partition and after partition\r\n            quickSort(arr, low, pi - 1);\r\n            quickSort(arr, pi + 1, high);\r\n        }\r\n    }\r\n\r\n    return animations;\r\n\r\n}\r\n\r\nexport default QuickSort;","import React from \"react\";\r\n\r\nfunction HeapSort(arr) {\r\n\r\n    var animations=[];\r\n\r\n    heapSort(arr,arr.length);\r\n\r\n    // To heapify a subtree rooted with node i which is\r\n// an index in arr[]. n is size of heap\r\nfunction heapify(arr, n, i)\r\n{\r\n    var largest = i; // Initialize largest as root\r\n    var l = 2 * i + 1; // left = 2*i + 1\r\n    var r = 2 * i + 2; // right = 2*i + 2\r\n \r\n    // If left child is larger than root\r\n    if (l < n && arr[l] > arr[largest])\r\n        largest = l;\r\n \r\n    // If right child is larger than largest so far\r\n    if (r < n && arr[r] > arr[largest])\r\n        largest = r;\r\n \r\n    // If largest is not root\r\n    if (largest != i) {\r\n        animations.push([0,i,largest,0,0]);\r\n        animations.push([1,i,largest,arr[i],arr[largest]]);\r\n        var temp=arr[i];\r\n        arr[i]=arr[largest];\r\n        arr[largest]=temp;\r\n        animations.push([2,i,largest,0,0]);\r\n \r\n        // Recursively heapify the affected sub-tree\r\n        heapify(arr, n, largest);\r\n    }\r\n}\r\n \r\n// main function to do heap sort\r\nfunction heapSort(arr, n)\r\n{\r\n    // Build heap (rearrange array)\r\n    for (var i = n / 2 - 1; i >= 0; i--)\r\n        heapify(arr, n, i);\r\n \r\n    // One by one extract an element from heap\r\n    for (var i = n - 1; i >= 0; i--) {\r\n        // Move current root to end\r\n        animations.push([0,0,i,0,0]);\r\n        animations.push([1,0,i,arr[0],arr[i]]);\r\n        var temp=arr[i];\r\n        arr[i]=arr[0];\r\n        arr[0]=temp;\r\n        animations.push([2,0,i,0,0]);\r\n        animations.push([3,i,0,0,0]);\r\n \r\n        // call max heapify on the reduced heap\r\n        heapify(arr, i, 0);\r\n    }\r\n}\r\n\r\nreturn animations;\r\n\r\n}\r\n\r\nexport default HeapSort;","import React, { useEffect, useState } from \"react\";\r\nimport BubbleSort from \"./SortingAlgorithms/BubbleSort\"\r\nimport \"./Array.css\";\r\nimport MergeSort from \"./SortingAlgorithms/MergeSort\";\r\nimport QuickSort from \"./SortingAlgorithms/QuickSort\";\r\nimport HeapSort from \"./SortingAlgorithms/HeapSort\";\r\n\r\nfunction Array() {\r\n\r\n\r\n    const [array,setArray] = useState([]);\r\n\r\n    useEffect (() => {\r\n        resetArray();\r\n    }, []);\r\n\r\n    function resetArray() {\r\n        var arr=[];\r\n        for(var i=0;i<150;i++) {\r\n            arr.push(Math.floor((Math.random() * 650) + 5));\r\n        }\r\n        setArray(arr);\r\n    }\r\n\r\n    function changeCSS() {\r\n        const arrayBars=document.getElementsByClassName('array-bar');\r\n        for(var i =0;i<150;i++) \r\n            arrayBars[i].style.backgroundColor='blue';\r\n    }\r\n\r\n\r\n    function handleBubbleSort() {\r\n        const animations=BubbleSort(array);\r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [code, bar1, bar2,newHeight1,newHeight2]= animations[i];\r\n            setTimeout(() => {\r\n                if(code===0) {\r\n                    arrayBars[bar1].style.backgroundColor='red';\r\n                    arrayBars[bar2].style.backgroundColor='red';\r\n                }\r\n                else if(code===1) {\r\n                    arrayBars[bar1].style.height=`${newHeight2}px`;\r\n                    arrayBars[bar2].style.height=`${newHeight1}px`;\r\n                }\r\n                else if(code===2) {\r\n                    arrayBars[bar1].style.backgroundColor='blue';\r\n                    arrayBars[bar2].style.backgroundColor='blue';\r\n                }\r\n                else {\r\n                    arrayBars[bar1].style.backgroundColor='turquoise';\r\n                }\r\n            },i*0.5);\r\n            \r\n        }\r\n    }\r\n\r\n    function handleMergeSort() {\r\n        const animations=MergeSort(array);\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [code, bar1, bar2,newHeight1,newHeight2]= animations[i];\r\n            setTimeout(() => {\r\n                if(code===0) {\r\n                    arrayBars[bar1].style.backgroundColor='red';\r\n                }\r\n                else if(code===1) {\r\n                    arrayBars[bar1].style.height=`${newHeight2}px`;\r\n                }\r\n                else if(code===2) {\r\n                    arrayBars[bar1].style.backgroundColor='blue';\r\n                }\r\n                else {\r\n                    arrayBars[bar1].style.backgroundColor='turquoise';\r\n                }\r\n            },i*2);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    function handleQuickSort() {\r\n        const animations=QuickSort(array);\r\n    \r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [code, bar1, bar2,newHeight1,newHeight2]= animations[i];\r\n            setTimeout(() => {\r\n                if(code===0) {\r\n                    arrayBars[bar1].style.backgroundColor='red';\r\n                    arrayBars[bar2].style.backgroundColor='red';\r\n                }\r\n                else if(code===1) {\r\n                    arrayBars[bar1].style.height=`${newHeight2}px`;\r\n                    arrayBars[bar2].style.height=`${newHeight1}px`;\r\n                }\r\n                else if(code===2) {\r\n                    arrayBars[bar1].style.backgroundColor='blue';\r\n                    arrayBars[bar2].style.backgroundColor='blue';\r\n                }\r\n                else if(code===3) {\r\n                    arrayBars[bar1].style.backgroundColor='yellow';\r\n                }\r\n                else {\r\n                    arrayBars[bar1].style.backgroundColor='turquoise';\r\n                }\r\n            },i*5);\r\n        \r\n        }\r\n    } \r\n\r\n    function handleHeapSort() {\r\n        const animations=HeapSort(array);\r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [code, bar1, bar2,newHeight1,newHeight2]= animations[i];\r\n            setTimeout(() => {\r\n                if(code===0) {\r\n                    arrayBars[bar1].style.backgroundColor='red';\r\n                    arrayBars[bar2].style.backgroundColor='red';\r\n                }\r\n                else if(code===1) {\r\n                    arrayBars[bar1].style.height=`${newHeight2}px`;\r\n                    arrayBars[bar2].style.height=`${newHeight1}px`;\r\n                }\r\n                else if(code===2) {\r\n                    arrayBars[bar1].style.backgroundColor='blue';\r\n                    arrayBars[bar2].style.backgroundColor='blue';\r\n                }\r\n                else {\r\n                    arrayBars[bar1].style.backgroundColor='turquoise';\r\n                }\r\n            },i*5);\r\n            \r\n        }\r\n    }\r\n\r\n        \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"array-container\">\r\n            {array.map((num,index) => \r\n                <div\r\n                className=\"array-bar\"\r\n                key={index}\r\n                style={{height:`${num}px`}}\r\n                >\r\n                {/* {num} */}\r\n                </div>\r\n            )}\r\n            <button onClick={() => {resetArray(); changeCSS();}}>Generate New Array</button>\r\n            <button onClick={handleBubbleSort}>Bubble Sort</button>\r\n            <button onClick={handleMergeSort}>Merge Sort</button>\r\n            <button onClick={handleQuickSort}>Quick Sort</button>\r\n            <button onClick={handleHeapSort}>Heap Sort</button>\r\n            </div>\r\n\r\n        \r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Array;","import React from \"react\";\nimport Array from \"./Array\";\n\nfunction App() {\n  return (\n    <Array />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App /> ,document.getElementById('root'));"],"sourceRoot":""}